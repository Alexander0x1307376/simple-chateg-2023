
events {}

http {
    include       /etc/nginx/mime.types;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;


    server {
        listen 80;

        location / {
            return 301 https://$host$request_uri;
        }
    }

# req -x509 -nodes -days 365 -newkey rsa:2048 -keyout selfsigned.key -out nginx-selfsigned.crt

    server {
        
        listen 443 ssl;

        ssl_certificate certificate.crt;
        ssl_certificate_key privateKey.key;

        location /api/ {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://host.docker.internal:3000/;
        }

        location /socket.io/ {
            proxy_pass http://host.docker.internal:3000;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # location /peer-connection/ {
        #     proxy_pass http://host.docker.internal:3020/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }

        location / {
            proxy_pass http://host.docker.internal:5173/;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}